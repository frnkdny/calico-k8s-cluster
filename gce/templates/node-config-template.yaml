#cloud-config
---
write_files:
  # Diags collection helper script:
  - path: /home/core/getcdiags.sh
    owner: root
    permissions: 0755
    content: |
      #!/bin/bash
      # Last line of calicoctl diags looks like this:
      # "  curl --upload-file /tmp/tmpRACajJ/diags-260516_123004.tar.gz https://transfer.sh/diags-260516_123004.tar.gz"
      FILE=`calicoctl node diags | tail -1 | cut -f 7 -d " "`
      cat ${FILE}

  # Cloud provider configuration.
  - path: /etc/gce.conf
    owner: root
    permissions: 0755
    content: |
      [Global]
      node-instance-prefix=__CLUSTER_PREFIX__
      node-tags=__CLUSTER_PREFIX__

  # We need to do this because of a mismatch between what HOSTNAME reports,
  # and what Kubernetes expects.  We cut off the trailing bits of domain name
  # so it matches the GCE instance name.
  - path: /home/core/build-kubelet-env.sh
    owner: root
    permissions: 0755
    content: |
      #!/bin/bash
      HOST=$(echo ${HOSTNAME} | cut -f1 -d".")
      echo "HOSTNAME_OVERRIDE=${HOST}" > /opt/bin/kubelet.env

  - path: /etc/resolv.conf
    owner: root
    permissions: 0755
    content: |
      # nameserver 10.100.0.10
      nameserver 169.254.169.254
      search default.svc.cluster.local svc.cluster.local cluster.local c.__GCE_PROJECT__.internal

coreos:
  etcd2:
    proxy: on
    listen-client-urls: http://127.0.0.1:2379
    initial-cluster: __ETCD_PEER_URLS__
  update:
    reboot-strategy: off
  units:
    - name: download.service
      command: start
      content: |
        [Unit]
        Description=Downloads files to nodes.
        After=docker.service
        Requires=docker.service
        [Service]
        Type=oneshot
        #seconds #https://www.freedesktop.org/software/systemd/man/systemd.service.html#TimeoutStartSec=
        TimeoutStartSec=1800
        RemainAfterExit=yes
        ExecStart=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/__K8S_VER__/bin/linux/amd64/kubelet
        ExecStart=/usr/bin/chmod +x /opt/bin/kubelet
        ExecStart=/usr/bin/wget --retry-connrefused --waitretry=30 --timeout=20 -N -P /tmp http://__CLUSTER_PREFIX__-master/cni.tgz
        ExecStart=/usr/bin/mkdir -p /opt/cni/bin
        ExecStart=/usr/bin/tar -C /opt/cni/bin -xzf /tmp/cni.tgz
        ExecStart=/usr/bin/wget -N -P /opt/bin  https://storage.googleapis.com/kubernetes-release/release/__K8S_VER__/bin/linux/amd64/kube-proxy
        ExecStart=/usr/bin/chmod +x /opt/bin/kube-proxy

    - name: "docker.service"
      drop-ins:
        - name: "50-insecure-registry.conf"
          content: |
            [Service]
            Environment=DOCKER_OPTS='--insecure-registry="__CLUSTER_PREFIX__-master:5000"'
            ExecStartPre=/usr/bin/rm -rf /var/lib/docker
    - name: etcd2.service
      command: start

    - name: build-env.service
      runtime: true
      command: start
      content: |
        [Unit]
        After=docker.service

        [Service]
        ExecStart=/home/core/build-kubelet-env.sh

    - name: kubelet.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/kubernetes/kubernetes
        After=etcd2.service
        After=build-env.service
        Requires=download.service docker.service build-env.service

        [Service]
        EnvironmentFile=/opt/bin/kubelet.env
        # calicoctl needed for diags collection
        ExecStartPre=/usr/bin/wget -N -P /opt/bin http://__CLUSTER_PREFIX__-master/calicoctl
        ExecStartPre=/usr/bin/chmod +x /opt/bin/calicoctl
        # prefetch images.
        ExecStartPre=/usr/bin/docker pull __CLUSTER_PREFIX__-master:5000/getter
        ExecStartPre=/usr/bin/docker pull __CLUSTER_PREFIX__-master:5000/calico-cni
        ExecStartPre=/usr/bin/docker pull __CLUSTER_PREFIX__-master:5000/calico-node
        ExecStartPre=/usr/bin/docker tag __CLUSTER_PREFIX__-master:5000/getter __GETTER_IMAGE__
        ExecStartPre=/usr/bin/docker tag __CLUSTER_PREFIX__-master:5000/calico-cni __CALICO_CNI_IMAGE__
        ExecStartPre=/usr/bin/docker tag __CLUSTER_PREFIX__-master:5000/calico-node __NODE_IMAGE__
        ExecStartPre=/usr/bin/docker pull __POD_INFRA_IMAGE__
        ExecStart=/opt/bin/kubelet \
        --port=10250 \
        --address=0.0.0.0 \
        --allow-privileged=true \
        --cluster-dns=10.100.0.10 \
        --cluster-domain=cluster.local \
        --api-servers=http://__CLUSTER_PREFIX__-master:8080 \
        --hostname-override=${HOSTNAME_OVERRIDE} \
        --cloud-provider=gce \
        --cni-conf-dir=/etc/cni/net.d \
        --cni-bin-dir=/opt/cni/bin \
        --network-plugin=__NETWORK_PLUGIN_MODE__ \
        --non-masquerade-cidr=__POD_CIDR__ \
        --pod-infra-container-image=__POD_INFRA_IMAGE__ \
        --max-pods=110 \
        --logtostderr=true
        Restart=always
        RestartSec=10

        [Install]
        WantedBy=multi-user.target

    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        After=download.service
        Requires=download.service
        [Service]
        ExecStart=/opt/bin/kube-proxy \
        --master=http://__CLUSTER_PREFIX__-master:8080 \
        --proxy-mode=iptables \
        --cluster-cidr=__POD_CIDR__ \
        --logtostderr=true
        Restart=always
        RestartSec=10
